// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.13.0
// source: core/abci/tendermint/crypto/keys.proto

package crypto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PublicKey defines the keys available for use with Tendermint Validators
type PublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Sum:
	//	*PublicKey_Ed25519
	//	*PublicKey_Secp256K1
	//	*PublicKey_Sr25519
	Sum isPublicKey_Sum `protobuf_oneof:"sum"`
}

func (x *PublicKey) Reset() {
	*x = PublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_abci_tendermint_crypto_keys_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKey) ProtoMessage() {}

func (x *PublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_core_abci_tendermint_crypto_keys_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKey.ProtoReflect.Descriptor instead.
func (*PublicKey) Descriptor() ([]byte, []int) {
	return file_core_abci_tendermint_crypto_keys_proto_rawDescGZIP(), []int{0}
}

func (m *PublicKey) GetSum() isPublicKey_Sum {
	if m != nil {
		return m.Sum
	}
	return nil
}

func (x *PublicKey) GetEd25519() []byte {
	if x, ok := x.GetSum().(*PublicKey_Ed25519); ok {
		return x.Ed25519
	}
	return nil
}

func (x *PublicKey) GetSecp256K1() []byte {
	if x, ok := x.GetSum().(*PublicKey_Secp256K1); ok {
		return x.Secp256K1
	}
	return nil
}

func (x *PublicKey) GetSr25519() []byte {
	if x, ok := x.GetSum().(*PublicKey_Sr25519); ok {
		return x.Sr25519
	}
	return nil
}

type isPublicKey_Sum interface {
	isPublicKey_Sum()
}

type PublicKey_Ed25519 struct {
	Ed25519 []byte `protobuf:"bytes,1,opt,name=ed25519,proto3,oneof"`
}

type PublicKey_Secp256K1 struct {
	Secp256K1 []byte `protobuf:"bytes,2,opt,name=secp256k1,proto3,oneof"`
}

type PublicKey_Sr25519 struct {
	Sr25519 []byte `protobuf:"bytes,3,opt,name=sr25519,proto3,oneof"`
}

func (*PublicKey_Ed25519) isPublicKey_Sum() {}

func (*PublicKey_Secp256K1) isPublicKey_Sum() {}

func (*PublicKey_Sr25519) isPublicKey_Sum() {}

var File_core_abci_tendermint_crypto_keys_proto protoreflect.FileDescriptor

var file_core_abci_tendermint_crypto_keys_proto_rawDesc = []byte{
	0x0a, 0x26, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x62, 0x63, 0x69, 0x2f, 0x74, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x6b, 0x65,
	0x79, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x22, 0x6a, 0x0a, 0x09, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x07, 0x65, 0x64, 0x32, 0x35,
	0x35, 0x31, 0x39, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x65, 0x64, 0x32,
	0x35, 0x35, 0x31, 0x39, 0x12, 0x1e, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x70, 0x32, 0x35, 0x36, 0x6b,
	0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x73, 0x65, 0x63, 0x70, 0x32,
	0x35, 0x36, 0x6b, 0x31, 0x12, 0x1a, 0x0a, 0x07, 0x73, 0x72, 0x32, 0x35, 0x35, 0x31, 0x39, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x73, 0x72, 0x32, 0x35, 0x35, 0x31, 0x39,
	0x42, 0x05, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x64, 0x79, 0x6d, 0x79, 0x6c, 0x6a, 0x61, 0x2f, 0x74,
	0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x62, 0x63, 0x69, 0x2f, 0x74, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_core_abci_tendermint_crypto_keys_proto_rawDescOnce sync.Once
	file_core_abci_tendermint_crypto_keys_proto_rawDescData = file_core_abci_tendermint_crypto_keys_proto_rawDesc
)

func file_core_abci_tendermint_crypto_keys_proto_rawDescGZIP() []byte {
	file_core_abci_tendermint_crypto_keys_proto_rawDescOnce.Do(func() {
		file_core_abci_tendermint_crypto_keys_proto_rawDescData = protoimpl.X.CompressGZIP(file_core_abci_tendermint_crypto_keys_proto_rawDescData)
	})
	return file_core_abci_tendermint_crypto_keys_proto_rawDescData
}

var file_core_abci_tendermint_crypto_keys_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_core_abci_tendermint_crypto_keys_proto_goTypes = []interface{}{
	(*PublicKey)(nil), // 0: tendermint.crypto.PublicKey
}
var file_core_abci_tendermint_crypto_keys_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_core_abci_tendermint_crypto_keys_proto_init() }
func file_core_abci_tendermint_crypto_keys_proto_init() {
	if File_core_abci_tendermint_crypto_keys_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_core_abci_tendermint_crypto_keys_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_core_abci_tendermint_crypto_keys_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*PublicKey_Ed25519)(nil),
		(*PublicKey_Secp256K1)(nil),
		(*PublicKey_Sr25519)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_core_abci_tendermint_crypto_keys_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_core_abci_tendermint_crypto_keys_proto_goTypes,
		DependencyIndexes: file_core_abci_tendermint_crypto_keys_proto_depIdxs,
		MessageInfos:      file_core_abci_tendermint_crypto_keys_proto_msgTypes,
	}.Build()
	File_core_abci_tendermint_crypto_keys_proto = out.File
	file_core_abci_tendermint_crypto_keys_proto_rawDesc = nil
	file_core_abci_tendermint_crypto_keys_proto_goTypes = nil
	file_core_abci_tendermint_crypto_keys_proto_depIdxs = nil
}

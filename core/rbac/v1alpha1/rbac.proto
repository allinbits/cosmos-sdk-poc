syntax="proto3";

package tmos.rbac.v1alpha1;

option go_package = "github.com/fdymylja/tmos/core/rbac/v1alpha1";

// Role defines a role, which defines what resources
// can be accessed and which operations can be performed
// on those resources
message Role {
  // id is the unique of the role, it does not identify the subject
  // it just identifies the role as multiple subjects can be bound
  // to the same role via RoleBinding
  string id = 1;
  // gets represents the resources (state objects) which the role can runtime.Get
  repeated string gets = 2;
  // lists represents the resources (state objects) which the role can runtime.List
  repeated string lists = 3;
  // creates represents the resources (state objects) which the role can runtime.Create
  repeated string creates = 4;
  // updates represents the resources (state objects) which the role can runtime.Update
  repeated string updates = 5;
  // deletes represents the resources(state objects)  which the role can runtime.Delete
  repeated string deletes = 6;
  // delivers represents the resources (state transitions) which tre role can runtime.Deliver
  repeated string delivers = 7;
}

// RoleBinding defines the role for a given subject
message RoleBinding {
  // subject defines which account the binding refers to
  string subject = 1;
  // role_ref points to the Role associated with subject
  string role_ref = 2;
}

// MsgCreateRole creates a new role
message MsgCreateRole {
  Role new_role = 1;
}

// MsgBindRole binds subject to role_id
message MsgBindRole {
  string role_id = 1;
  string subject = 2;
}